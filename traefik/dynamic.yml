http:
  middlewares:
    basic-auth:
      basicauth:
        users:
          # Middleware requires basic auth (admin:password) to load nginx page.
          - admin:$2y$05$og5odDYumPu9AcYjsQVTjeQtQHFQSRsjZjAAgERYeqYx932c7lU5.
    content-compression:
      compress:
        minresponsebodybytes: 200
    request-id:
      plugin:
        requestId: true
  routers:
    dashboard:
      middlewares:
        - request-id@file
        - content-compression@file
        - basic-auth@file
      rule: Host(`traefik.docker.localhost`)
      service: api@internal
      tls: true
    grafana:
      rule: Host(`grafana.docker.localhost`)
      service: grafana
      tls: true
    nginx:
      middlewares:
        - request-id@file
        - content-compression@file
      rule: Host(`nginx.docker.localhost`)
      service: nginx
      tls: true
    prometheus:
      rule: Host(`prometheus.docker.localhost`)
      service: prometheus
      tls: true
    whoami:
      middlewares:
        - request-id@file
        - content-compression@file
      rule: Host(`whoami.docker.localhost`)
      service: whoami
      tls: true
  services:
    grafana:
      loadBalancer:
        healthCheck:
          interval: 5s
          path: /api/health
          timeout: 1s
        servers:
          - url: http://grafana:3000
    nginx:
      loadBalancer:
        healthCheck:
          interval: 5s
          path: /health
          timeout: 1s
        servers:
          - url: http://nginx:80
    prometheus:
      loadBalancer:
        healthCheck:
          interval: 5s
          path: /-/healthy
          timeout: 1s
        servers:
          - url: http://prometheus:9090
    whoami:
      loadBalancer:
        healthCheck:
          interval: 5s
          path: /health
          timeout: 1s
        servers:
          - url: http://whoami:80
tls:
  stores:
    default:
      defaultCertificate:
        certFile: /etc/traefik/tls-certificate.pem
        keyFile: /etc/traefik/tls-key.pem
