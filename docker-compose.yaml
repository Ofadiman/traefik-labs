services:
  docker-socket-proxy:
    environment:
      CONTAINERS: 1
    image: tecnativa/docker-socket-proxy:0.3.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  grafana:
    image: grafana/grafana-oss:11.4.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=webSecure
      - traefik.http.routers.grafana.rule=Host(`grafana.docker.localhost`)
      - traefik.http.routers.grafana.service=grafana
      - traefik.http.routers.grafana.tls=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000
    volumes:
      - ./dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana-data-sources.yml:/etc/grafana/provisioning/datasources/grafana-data-sources.yml
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./traefik-dashboard.json:/etc/grafana/provisioning/dashboards/traefik-dashboard.json
  nginx:
    image: nginx:1.27.3
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.entrypoints=webSecure
      - traefik.http.routers.nginx.middlewares=basic-auth@file,content-compression@file
      - traefik.http.routers.nginx.rule=Host(`nginx.docker.localhost`)
      - traefik.http.routers.nginx.service=nginx
      - traefik.http.routers.nginx.tls=true
      - traefik.http.services.nginx.loadbalancer.server.port=80
  prometheus:
    image: prom/prometheus:v3.0.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.entrypoints=webSecure
      - traefik.http.routers.prometheus.rule=Host(`prometheus.docker.localhost`)
      - traefik.http.routers.prometheus.service=prometheus
      - traefik.http.routers.prometheus.tls=true
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  traefik:
    healthcheck:
      interval: 5s
      retries: 5
      start_period: 5s
      test:
        - CMD
        - traefik
        - healthcheck
      timeout: 1s
    image: traefik:v3.2.3
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.entrypoints=webSecure
      - traefik.http.routers.dashboard.middlewares=basic-auth@file
      - traefik.http.routers.dashboard.rule=Host(`traefik.docker.localhost`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.services.dashboard.loadbalancer.server.port=8080
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./dynamic.yaml:/etc/traefik/dynamic.yaml
      - ./request-id:/plugins-local/src/github.com/ofadiman/request-id
      - ./tls-certificate.pem:/etc/traefik/tls-certificate.pem
      - ./tls-key.pem:/etc/traefik/tls-key.pem
      - ./traefik.yaml:/etc/traefik/traefik.yaml
  whoami:
    deploy:
      replicas: 2
    image: traefik/whoami:v1.10
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.entrypoints=webSecure
      - traefik.http.routers.whoami.middlewares=content-compression@file,request-id@file
      - traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)
      - traefik.http.routers.whoami.service=whoami
      - traefik.http.routers.whoami.tls=true
      - traefik.http.services.whoami.loadbalancer.server.port=80
