services:
  nginx:
    image: nginx:1.27.3
    labels:
      - traefik.enable=true
      # Middleware requires basic auth (admin:password) to load nginx page.
      - traefik.http.middlewares.basic-auth-protection.basicauth.users=admin:$$2y$$05$$og5odDYumPu9AcYjsQVTjeQtQHFQSRsjZjAAgERYeqYx932c7lU5.
      - traefik.http.middlewares.content-compression.compress.minresponsebodybytes=200
      - traefik.http.middlewares.content-compression.compress=true
      - traefik.http.routers.nginx.entrypoints=webSecure
      - traefik.http.routers.nginx.middlewares=basic-auth-protection@docker,content-compression@docker
      - traefik.http.routers.nginx.rule=Host(`nginx.docker.localhost`)
      - traefik.http.routers.nginx.service=nginx
      - traefik.http.routers.nginx.tls=true
      - traefik.http.services.nginx.loadbalancer.server.port=80
  traefik:
    image: traefik:v3.2.3
    ports:
      - 80:80
      - 443:443
      - 420:420
      # Expose traefik dashboard on port 8080. Dashboard is enabled by passing `--api.insecure=true` option.
      - 8080:8080
    volumes:
      - ./traefik.yaml:/etc/traefik/traefik.yaml
      # Allow traefik to listen to docker events.
      - /var/run/docker.sock:/var/run/docker.sock
  whoami:
    deploy:
      replicas: 2
    image: traefik/whoami:v1.10
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.content-compression.compress.minresponsebodybytes=200
      - traefik.http.middlewares.content-compression.compress=true
      - traefik.http.routers.whoami.entrypoints=webSecure
      - traefik.http.routers.whoami.middlewares=content-compression@docker
      - traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)
      - traefik.http.routers.whoami.service=whoami
      - traefik.http.routers.whoami.tls=true
      - traefik.http.services.whoami.loadbalancer.server.port=80
